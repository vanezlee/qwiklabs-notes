-- Query 1: Total Confirmed Cases
SELECT sum(confirmed) as total_cases_worldwide 
FROM `bigquery-public-data.covid19_jhu_csse_eu.summary`
where date = '2020-04-15' 

-- Query 2: Worst Affected Areas
-- Original answer : 
With deaths_by_states as 
(
SELECT 
province_state, 
sum (deaths) deaths
FROM `bigquery-public-data.covid19_jhu_csse_eu.summary` 
WHERE date = '2020-04-10'
AND country_region = 'US'
group by 1
Order by deaths desc
)
select count(*) count_of_states from deaths_by_states where deaths > 100

-- Accepted answer : 
select count(province_state) as count_of_states from 
(
SELECT 
province_state, 
FROM `bigquery-public-data.covid19_jhu_csse_eu.summary` 
WHERE date = '2020-04-10'
AND country_region = 'US'
AND province_state IS NOT NULL
group by 1
Having deaths >= 100
)


-- Query 3: Identifying Hotspots

SELECT 
province_state as state, 
sum(confirmed) as total_confirmed_cases
FROM `bigquery-public-data.covid19_jhu_csse_eu.summary` 
WHERE date = '2020-04-10'
AND country_region = 'US'
Group by 1
Having total_confirmed_cases >1000
ORDER BY total_confirmed_cases desc

-- Query 4: Fatality Ratio

SELECT 
sum(deaths) total_deaths, sum(confirmed) total_confirmed_cases, sum(deaths) /sum(confirmed)*100 as case_fatality_ratio
FROM `bigquery-public-data.covid19_jhu_csse_eu.summary`  
WHERE country_region = 'Italy'
and date='2020-04-30'
--and date between '2020-04-01' and '2020-04-30' (error some sort)

-- Query 5: Identifying specific day
SELECT 
date,  
FROM `bigquery-public-data.covid19_jhu_csse_eu.summary`  
WHERE country_region = 'Italy'
and deaths > 10000
order by date 

-- Query 6: Finding days with zero net new cases
-- Combine both queries together : 

WITH india_cases_by_date AS (
  SELECT
    date,
    SUM(confirmed) AS cases
  FROM
    `bigquery-public-data.covid19_jhu_csse_eu.summary`
  WHERE
    country_region="India"
    AND date between '2020-02-21' and '2020-03-15'
  GROUP BY
    date
  ORDER BY
    date ASC
 )

, india_previous_day_comparison AS
(SELECT
  date,
  cases,
  LAG(cases) OVER(ORDER BY date) AS previous_day,
  cases - LAG(cases) OVER(ORDER BY date) AS net_new_cases
FROM 
( SELECT
    date,
    SUM(confirmed) AS cases
  FROM
    `bigquery-public-data.covid19_jhu_csse_eu.summary`
  WHERE
    country_region="India"
    AND date between '2020-02-21' and '2020-03-15'
  GROUP BY
    date
  ORDER BY
    date ASC) 
    
-- To realise function `LAG(cases) OVER(ORDER BY date)` logs the previous confirmed case #
-- Lag function returns the value of the value_expression on a preceding (previous) row
-- Accepted answer : 
WITH india_cases_by_date AS (
  SELECT
    date,
    SUM(confirmed) AS cases
  FROM
    `bigquery-public-data.covid19_jhu_csse_eu.summary`
  WHERE
    country_region="India"
    AND date between '2020-02-21' and '2020-03-15'
  GROUP BY
    date
  ORDER BY
    date ASC
 )

, india_previous_day_comparison AS
(SELECT
  date,
  cases,
  LAG(cases) OVER(ORDER BY date) AS previous_day,
  cases - LAG(cases) OVER(ORDER BY date) AS net_new_cases
FROM india_cases_by_date
)

select date from india_previous_day_comparison
where net_new_cases=0

Query 7: Doubling rate

WITH us_cases_by_date AS (
  SELECT
    date,
    SUM(confirmed) AS cases
  FROM
    `bigquery-public-data.covid19_jhu_csse_eu.summary`
  WHERE
    country_region="US"
    AND date between '2020-03-22' and '2020-04-20'
  GROUP BY
    date
  ORDER BY
    date ASC 
 )
 
, us_previous_day_comparison AS 
(SELECT
  date,
  cases,
  LAG(cases) OVER(ORDER BY date) AS previous_day,
  cases - LAG(cases) OVER(ORDER BY date) AS net_new_cases,
  (cases - LAG(cases) OVER(ORDER BY date))*100/LAG(cases) OVER(ORDER BY date) AS percentage_increase
FROM us_cases_by_date
)

select Date, cases as Confirmed_Cases_On_Day, previous_day as Confirmed_Cases_Previous_Day, percentage_increase as Percentage_Increase_In_Cases
from us_previous_day_comparison
where percentage_increase > 10


-- Query 8: Recovery rate

SELECT 
  country_region country, 
  sum(recovered) recovered_cases, 
  sum(confirmed) confirmed_cases, 
  (sum(recovered)/sum(confirmed)) *100 recovery_rate
FROM
    `bigquery-public-data.covid19_jhu_csse_eu.summary`

WHERE confirmed > 50000
AND date = '2020-05-10'
Group by 1
Order by recovery_rate desc
Limit 10


-- Query 9: CDGR - Cumulative Daily Growth Rate
-- Lead Returns the value of the value_expression on a subsequent row. 
-- In the sample, LEAD(name) OVER (PARTITION BY division ORDER BY finish_time ASC) // PARTITION BY is optional but Order by is mandatory 
-- DATE_DIFF function eg : SELECT DATE_DIFF(DATE '2010-07-07', DATE '2008-12-25', DAY) // Input the latter date first to get a positive integer
WITH
  france_cases AS (
  SELECT
    date,
    sum(confirmed) AS total_cases
  FROM
    `bigquery-public-data.covid19_jhu_csse_eu.summary`
  WHERE
    country_region="France"
    AND date IN ('2020-01-24',
      '2020-05-10')
 GROUP BY date
 ORDER BY date)
, 

summary as (
SELECT
  total_cases AS first_day_cases,
  LEAD(total_cases) 
  OVER (ORDER BY date ASC) AS last_day_cases,
  DATE_DIFF(LEAD(date) OVER(ORDER BY date),date, day) AS days_diff
FROM
  france_cases
LIMIT 1
)

select first_day_cases, last_day_cases, days_diff, POW((last_day_cases/first_day_cases),(1/days_diff))-1 as cdgr
from summary



Q 10
-- Run the query, and click 'Explore Data' > 'Explore with Data Studio' to link the query to a DS report. Change the default table graph type into a line graph. 
SELECT
  date,
  SUM(confirmed) AS country_cases,
  SUM(deaths) AS country_deaths,
FROM
  `bigquery-public-data.covid19_jhu_csse_eu.summary`
WHERE
  date BETWEEN '2020-03-15'
  AND '2020-04-30'
  AND country_region='US'
GROUP BY date
